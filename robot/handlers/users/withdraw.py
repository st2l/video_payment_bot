import logging
from random import randint

from asgiref.sync import sync_to_async
from robot.models import TelegramUser, Video
import asyncio

from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart

from loader import dp
from robot.keyboards.inline import payment_method
from robot.utils import send_video

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State


@dp.callback_query_handler(lambda call: call.data.startswith('withdraw'), state='*')
async def withdraw(call: types.CallbackQuery, state: FSMContext):
    telegram_user, _ = await TelegramUser.objects.aget_or_create(chat_id=call.from_user.id)
    user = await sync_to_async(telegram_user.get_user, thread_sensitive=True)()

    await call.answer()
    await call.message.edit_text(
        text=f"""üí∞ –ë–∞–ª–∞–Ω—Å: {telegram_user.balance}$
<i>–í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞?</i>
–ò–ª–∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:
- üí∞ +10$ –∑–∞ –∞ƒ∏—Ü–∏—é "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞".
- üí∂ +0.5$ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µƒ∏–ª–∞–º–Ω—ã—Ö –≤–∏–¥–µ–æ.

<b>–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:</b>""",
        reply_markup=await payment_method()

    )
